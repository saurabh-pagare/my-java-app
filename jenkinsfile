// Jenkinsfile (Declarative Pipeline)


pipeline {
	//Define where the pipeline will run. 'any' means on any available Jenkins agent/node.
	//For out Docker container, this will be the 'master' node itself.
	agent any
	
	//Define environment variable specific to this pipeline.
	//MAVEN_HOME points to the Maven tool you configured in jenkins (named  'M3').
	environment {
		
		MAVEN_HOME = tool 'M3'
	}
	
	Stages {
		
		stage('Checkout') {
			steps {
				echo 'Checking out source from Git...'
			}
		}
		
		stage ('Build') {
			steps {
				echo 'Building the project with Maven...'
				sh "${MAVEN_HOME}/bin/mvn clean compile"
			}
		}
		
		stage('Test') {
			steps {
				echo 'Running unit tests...'
				sh "{MAVEN_HOME}/bin/mvn test"
			}
		}
		
		stage('Package') {
            steps {
                echo 'Packaging the application...'
                // Execute Maven's package goal.
                // We skip tests here because they were already run in the 'Test' stage.
                sh "${MAVEN_HOME}/bin/mvn package -Dmaven.test.skip=true"
            }
        }
	}
	
	post {
        // 'always' block runs regardless of the pipeline's overall status (success or failure).
        always {
            echo 'Cleaning up workspace...'
            // Clean the workspace to free up disk space for the next build
            cleanWs()
        }
        // 'success' block runs only if all stages completed successfully.
        success {
            echo 'Pipeline finished successfully! Archiving artifacts and publishing test results...'
            // Archive the JAR file produced by the 'Package' stage
            archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
            // Publish the JUnit test results so Jenkins can display them
            junit 'target/surefire-reports/*.xml'
        }
        // 'failure' block runs only if any stage failed.
        failure {
            echo 'Pipeline failed! Check the logs for details.'
            // You might want to send notifications here
            // mail to: 'your-email@example.com', subject: "Build Failed: ${env.JOB_NAME} - ${env.BUILD_NUMBER}"
        }
}